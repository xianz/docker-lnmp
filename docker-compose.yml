
services:
  nginx:
    build:
      context: ./nginx
      args:
        NGINX_TAG: $NGINX_TAG
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
#      - ./nginx/cert:/etc/nginx/cert
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log:/var/log/nginx
    networks:
      - frontend
    restart: always
    container_name: nginx

  php:
    build:
      context: ./php81
      args:
        PHP_TAG: $PHP_TAG
        PHP_REDIS_VERSION: $PHP_REDIS_VERSION
#        AMQP_VERSION: $AMQP_VERSION
    ports:
      - "9501:9501"
    volumes:
      - ./www:/var/www/html
      - ./php81/config/php.ini:/usr/local/etc/php/php.ini
      - ./php81/config/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php81/config/php-fpm.d:/usr/local/etc/php-fpm.d
    networks:
      - frontend
      - backend
    restart: always
    container_name: php


  mysql:
#    build:
#      context: ./mysql
#      args:
#        MYSQL_TAG: $MYSQL_TAG
    image: mysql:$MYSQL_TAG
    user: "1001:1001"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
#      - ./mysql/my.cnf:/etc/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    networks:
      - backend
    restart: always
    privileged: true
    container_name: mysql


  redis:
    build:
      context: ./redis
      args:
        REDIS_TAG: $REDIS_TAG
    ports:
      - "6379:6379"
#    volumes:
#      - ./redis/redis.conf/:/usr/local/etc/redis.conf
#      - ./redis/data:/usr/local/redis/data
#      - ./redis/redis.log:/usr/local/redis/redis.log
    networks:
      - backend
    restart: always
    container_name: redis


networks:
  frontend:
  backend:

